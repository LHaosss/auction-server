// Code generated by goctl. DO NOT EDIT.
// Source: auctionInfoManager.proto

package auctioninfomangercenter

import (
	"context"

	"auction_server/auctionInfoManager-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuctionInfo          = pb.AuctionInfo
	GetUserOfferInfoReq  = pb.GetUserOfferInfoReq
	GetUserOfferInfoResp = pb.GetUserOfferInfoResp
	GetUserPostInfoReq   = pb.GetUserPostInfoReq
	GetUserPostInfoResp  = pb.GetUserPostInfoResp
	UserOfferAuctionReq  = pb.UserOfferAuctionReq
	UserOfferAuctionResp = pb.UserOfferAuctionResp
	UserPostAuctionReq   = pb.UserPostAuctionReq
	UserPostAuctionResp  = pb.UserPostAuctionResp

	Auctioninfomangercenter interface {
		GetUserPostInfo(ctx context.Context, in *GetUserPostInfoReq, opts ...grpc.CallOption) (*GetUserPostInfoResp, error)
		GetUserOfferInfo(ctx context.Context, in *GetUserOfferInfoReq, opts ...grpc.CallOption) (*GetUserOfferInfoResp, error)
		UserPostAuction(ctx context.Context, in *UserPostAuctionReq, opts ...grpc.CallOption) (*UserPostAuctionResp, error)
		UserOfferAuction(ctx context.Context, in *UserOfferAuctionReq, opts ...grpc.CallOption) (*UserOfferAuctionResp, error)
	}

	defaultAuctioninfomangercenter struct {
		cli zrpc.Client
	}
)

func NewAuctioninfomangercenter(cli zrpc.Client) Auctioninfomangercenter {
	return &defaultAuctioninfomangercenter{
		cli: cli,
	}
}

func (m *defaultAuctioninfomangercenter) GetUserPostInfo(ctx context.Context, in *GetUserPostInfoReq, opts ...grpc.CallOption) (*GetUserPostInfoResp, error) {
	client := pb.NewAuctioninfomangercenterClient(m.cli.Conn())
	return client.GetUserPostInfo(ctx, in, opts...)
}

func (m *defaultAuctioninfomangercenter) GetUserOfferInfo(ctx context.Context, in *GetUserOfferInfoReq, opts ...grpc.CallOption) (*GetUserOfferInfoResp, error) {
	client := pb.NewAuctioninfomangercenterClient(m.cli.Conn())
	return client.GetUserOfferInfo(ctx, in, opts...)
}

func (m *defaultAuctioninfomangercenter) UserPostAuction(ctx context.Context, in *UserPostAuctionReq, opts ...grpc.CallOption) (*UserPostAuctionResp, error) {
	client := pb.NewAuctioninfomangercenterClient(m.cli.Conn())
	return client.UserPostAuction(ctx, in, opts...)
}

func (m *defaultAuctioninfomangercenter) UserOfferAuction(ctx context.Context, in *UserOfferAuctionReq, opts ...grpc.CallOption) (*UserOfferAuctionResp, error) {
	client := pb.NewAuctioninfomangercenterClient(m.cli.Conn())
	return client.UserOfferAuction(ctx, in, opts...)
}
