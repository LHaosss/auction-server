// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: auctionInfoManager.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Auctioninfomangercenter_GetUserPostInfo_FullMethodName  = "/pb.auctioninfomangercenter/GetUserPostInfo"
	Auctioninfomangercenter_GetUserOfferInfo_FullMethodName = "/pb.auctioninfomangercenter/GetUserOfferInfo"
	Auctioninfomangercenter_UserPostAuction_FullMethodName  = "/pb.auctioninfomangercenter/UserPostAuction"
	Auctioninfomangercenter_UserOfferAuction_FullMethodName = "/pb.auctioninfomangercenter/UserOfferAuction"
)

// AuctioninfomangercenterClient is the client API for Auctioninfomangercenter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AuctioninfomangercenterClient interface {
	GetUserPostInfo(ctx context.Context, in *GetUserPostInfoReq, opts ...grpc.CallOption) (*GetUserPostInfoResp, error)
	GetUserOfferInfo(ctx context.Context, in *GetUserOfferInfoReq, opts ...grpc.CallOption) (*GetUserOfferInfoResp, error)
	UserPostAuction(ctx context.Context, in *UserPostAuctionReq, opts ...grpc.CallOption) (*UserPostAuctionResp, error)
	UserOfferAuction(ctx context.Context, in *UserOfferAuctionReq, opts ...grpc.CallOption) (*UserOfferAuctionResp, error)
}

type auctioninfomangercenterClient struct {
	cc grpc.ClientConnInterface
}

func NewAuctioninfomangercenterClient(cc grpc.ClientConnInterface) AuctioninfomangercenterClient {
	return &auctioninfomangercenterClient{cc}
}

func (c *auctioninfomangercenterClient) GetUserPostInfo(ctx context.Context, in *GetUserPostInfoReq, opts ...grpc.CallOption) (*GetUserPostInfoResp, error) {
	out := new(GetUserPostInfoResp)
	err := c.cc.Invoke(ctx, Auctioninfomangercenter_GetUserPostInfo_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auctioninfomangercenterClient) GetUserOfferInfo(ctx context.Context, in *GetUserOfferInfoReq, opts ...grpc.CallOption) (*GetUserOfferInfoResp, error) {
	out := new(GetUserOfferInfoResp)
	err := c.cc.Invoke(ctx, Auctioninfomangercenter_GetUserOfferInfo_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auctioninfomangercenterClient) UserPostAuction(ctx context.Context, in *UserPostAuctionReq, opts ...grpc.CallOption) (*UserPostAuctionResp, error) {
	out := new(UserPostAuctionResp)
	err := c.cc.Invoke(ctx, Auctioninfomangercenter_UserPostAuction_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auctioninfomangercenterClient) UserOfferAuction(ctx context.Context, in *UserOfferAuctionReq, opts ...grpc.CallOption) (*UserOfferAuctionResp, error) {
	out := new(UserOfferAuctionResp)
	err := c.cc.Invoke(ctx, Auctioninfomangercenter_UserOfferAuction_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuctioninfomangercenterServer is the server API for Auctioninfomangercenter service.
// All implementations must embed UnimplementedAuctioninfomangercenterServer
// for forward compatibility
type AuctioninfomangercenterServer interface {
	GetUserPostInfo(context.Context, *GetUserPostInfoReq) (*GetUserPostInfoResp, error)
	GetUserOfferInfo(context.Context, *GetUserOfferInfoReq) (*GetUserOfferInfoResp, error)
	UserPostAuction(context.Context, *UserPostAuctionReq) (*UserPostAuctionResp, error)
	UserOfferAuction(context.Context, *UserOfferAuctionReq) (*UserOfferAuctionResp, error)
	mustEmbedUnimplementedAuctioninfomangercenterServer()
}

// UnimplementedAuctioninfomangercenterServer must be embedded to have forward compatible implementations.
type UnimplementedAuctioninfomangercenterServer struct {
}

func (UnimplementedAuctioninfomangercenterServer) GetUserPostInfo(context.Context, *GetUserPostInfoReq) (*GetUserPostInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserPostInfo not implemented")
}
func (UnimplementedAuctioninfomangercenterServer) GetUserOfferInfo(context.Context, *GetUserOfferInfoReq) (*GetUserOfferInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserOfferInfo not implemented")
}
func (UnimplementedAuctioninfomangercenterServer) UserPostAuction(context.Context, *UserPostAuctionReq) (*UserPostAuctionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserPostAuction not implemented")
}
func (UnimplementedAuctioninfomangercenterServer) UserOfferAuction(context.Context, *UserOfferAuctionReq) (*UserOfferAuctionResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserOfferAuction not implemented")
}
func (UnimplementedAuctioninfomangercenterServer) mustEmbedUnimplementedAuctioninfomangercenterServer() {
}

// UnsafeAuctioninfomangercenterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AuctioninfomangercenterServer will
// result in compilation errors.
type UnsafeAuctioninfomangercenterServer interface {
	mustEmbedUnimplementedAuctioninfomangercenterServer()
}

func RegisterAuctioninfomangercenterServer(s grpc.ServiceRegistrar, srv AuctioninfomangercenterServer) {
	s.RegisterService(&Auctioninfomangercenter_ServiceDesc, srv)
}

func _Auctioninfomangercenter_GetUserPostInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserPostInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuctioninfomangercenterServer).GetUserPostInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Auctioninfomangercenter_GetUserPostInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuctioninfomangercenterServer).GetUserPostInfo(ctx, req.(*GetUserPostInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auctioninfomangercenter_GetUserOfferInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserOfferInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuctioninfomangercenterServer).GetUserOfferInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Auctioninfomangercenter_GetUserOfferInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuctioninfomangercenterServer).GetUserOfferInfo(ctx, req.(*GetUserOfferInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auctioninfomangercenter_UserPostAuction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserPostAuctionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuctioninfomangercenterServer).UserPostAuction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Auctioninfomangercenter_UserPostAuction_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuctioninfomangercenterServer).UserPostAuction(ctx, req.(*UserPostAuctionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auctioninfomangercenter_UserOfferAuction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserOfferAuctionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuctioninfomangercenterServer).UserOfferAuction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Auctioninfomangercenter_UserOfferAuction_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuctioninfomangercenterServer).UserOfferAuction(ctx, req.(*UserOfferAuctionReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Auctioninfomangercenter_ServiceDesc is the grpc.ServiceDesc for Auctioninfomangercenter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Auctioninfomangercenter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.auctioninfomangercenter",
	HandlerType: (*AuctioninfomangercenterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserPostInfo",
			Handler:    _Auctioninfomangercenter_GetUserPostInfo_Handler,
		},
		{
			MethodName: "GetUserOfferInfo",
			Handler:    _Auctioninfomangercenter_GetUserOfferInfo_Handler,
		},
		{
			MethodName: "UserPostAuction",
			Handler:    _Auctioninfomangercenter_UserPostAuction_Handler,
		},
		{
			MethodName: "UserOfferAuction",
			Handler:    _Auctioninfomangercenter_UserOfferAuction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auctionInfoManager.proto",
}
