// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package usercenter

import (
	"context"

	"auction_server/user-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserLoginReq     = pb.UserLoginReq
	UserLoginResp    = pb.UserLoginResp
	UserRegisterReq  = pb.UserRegisterReq
	UserRegisterResp = pb.UserRegisterResp

	Usercenter interface {
		UserRegister(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*UserRegisterResp, error)
		UserLogin(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginResp, error)
	}

	defaultUsercenter struct {
		cli zrpc.Client
	}
)

func NewUsercenter(cli zrpc.Client) Usercenter {
	return &defaultUsercenter{
		cli: cli,
	}
}

func (m *defaultUsercenter) UserRegister(ctx context.Context, in *UserRegisterReq, opts ...grpc.CallOption) (*UserRegisterResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.UserRegister(ctx, in, opts...)
}

func (m *defaultUsercenter) UserLogin(ctx context.Context, in *UserLoginReq, opts ...grpc.CallOption) (*UserLoginResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.UserLogin(ctx, in, opts...)
}
